
module regfile #(
	parameter WIDTH = 32,
	parameter REG_COUNT = 16
	localparam REG_BITS = $clog2(REG_COUNT)
)(
	input logic [REG_BITS-1:0] read_reg1, read_reg2, write_reg,
	input logic [WIDTH-1:0] write_data,
	input logic write_en,
	input logic clk,
	output logic [WIDTH-1:0] read_data1, read_data2
);
	logic [WIDTH-1:0] registers [REG_COUNT-1:0];		// unpacked array of 32 bit packed values
	
	assign read_data1 = registers[read_reg1];
	assign read_data2 = registers[read_reg2];
	assign registers[0] = 'b0;		// Register 0 contains the constant value 0
	
	always @(posedge clk) begin
		if (write_en) 
			registers[write_reg] <= write_data;
	end

endmodule